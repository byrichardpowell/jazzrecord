# Outstanding to-do items. Can be tentatively assigned as noted below.

NICK
----
* Verify hasOne/belongsTo is working as documented
* association-saving/loading on save, association-unlinking on destroy
* Fix GearsAdapter so it can be unloaded/reloaded if necessary/Same in AirAdapter?
* Implement proper conditions array handling: ["col1 = ? AND col2 = ?", col1_match, col2_match]
* Implement group
* Implement findBySql
* Implement update, updateAll on Model: Useful in migrations
* Implement add'l dirty object methods: http://ryandaigle.com/articles/2008/3/31/what-s-new-in-edge-rails-dirty-objects

DAVID
-----
* migration.js - implementing last 3 methods (removeColumn, renameColumn, changeColumn) for
  sqlite-friendliness

JESSE
-----
* implement details of validation code per storage type, implementing custom validation
  and common validations (max/min length for strings, email address)
* Swap out existing Model.Options.validation object for one with two sub-methods of a validation object
* Setup calls to isValid("create") and isValid("update") in Record.save(), removing existing call to isValid() and moving into sections right before firing associated events.

UNASSIGNED
----------
* implement Model/Record methods in methods.js and initialize code in model.js/record.js
* add createIndex/dropIndex methods in migrations.js (copy names from activerecord, natch)
* transaction handling
* (maybe) convert recursive loading algorithms to intelligent join query builder?
* TEST TEST TEST! (see http://mootools.net/blog/2007/10/20/whats-new-in-12-behaviour-driven-developmentyou-know-weve-been-telling-you-that-mootools-is-reliable-but-how-can-you-can-be-sure-that-it-will-work-for-your-project-without-just-taking-our-word/)



Ideas:

Support HTML5 DB access
-http://www.whatwg.org/specs/web-apps/current-work/#sql
-http://www.w3.org/html/wg/html5/#sql

Yahoo BrowserPlus Support
-http://browserplus.yahoo.com/services/  (PStore - DB ACCESS)