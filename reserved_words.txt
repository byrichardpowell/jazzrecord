in Model columns 
  # because they are copied over to Record object (or exist there in the first place)
  # and we don't want conflicts w/ Record methods/props
  id (no repurposing allowed)
  methods:
    options
    destroy
    getData
    isChanged
    save
    reload
    updateAttribute
    toString
    any user-defined methods of Model cannot have same-named column correlaries
  # Any user-defined Model relationship (hasMany/belongsTo/etc) creates
  # corresponding properties on Record object. These take care of propagating IDs/fetching proper arrays
  # and storing data in mapping tables for hasAndBelongsToMany